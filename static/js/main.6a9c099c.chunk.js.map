{"version":3,"sources":["components/Header.js","components/Coins.js","components/Pages.js","components/MainList.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","icon","faChartArea","Posts","coins","loading","keyField","data","columns","dataField","text","sort","defaultSorted","order","Pages","coinsPerPage","totalCoins","activePage","paginate","Pagination","map","number","Item","onClick","href","active","MainList","useState","setCoins","setLoading","currentPage","setCurrentPage","currency","useEffect","a","url","axios","get","res","fetchCoins","totalPosts","length","pageNumber","Dashboard","Container","fluid","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OASeA,MANf,WACI,OACI,oBAAGC,UAAU,eAAb,6CAA4D,cAAC,IAAD,CAAiBC,KAAMC,U,2DC8E5EC,MA/Ef,YAAiC,IAAjBC,EAAgB,EAAhBA,MAiCZ,OAjC4B,EAATC,QAkCR,kDAIP,cAAC,IAAD,CACIC,SAAS,KACTC,KAAOH,EACPI,QAvCQ,CAAC,CACbC,UAAW,kBACXC,KAAM,IACNC,MAAM,GACP,CACCF,UAAW,OACXC,KAAM,OACNC,MAAM,GACP,CACCF,UAAW,SACXC,KAAM,GACNC,MAAM,GACP,CACCF,UAAW,gBACXC,KAAM,QACNC,MAAM,GACP,CACCF,UAAW,eACXC,KAAM,aACNC,MAAM,GACP,CACCF,UAAU,QACVC,KAAM,cACNC,MAAM,IAiBFC,cAdc,CAAC,CACvBH,UAAW,kBACXI,MAAO,W,QCLIC,MAzBf,YAAkE,EAAjDC,aAAiD,EAAnCC,WAAoC,IAAxBC,EAAuB,EAAvBA,WAAYC,EAAW,EAAXA,SASnD,OACI,8BACI,cAACC,EAAA,EAAD,UATY,CAAC,EAAG,EAAG,EAAG,EAAG,GAURC,KAAI,SAAAC,GAAM,OACnB,cAACF,EAAA,EAAWG,KAAZ,CAAiBC,QAAS,kBAAML,EAASG,IAASG,KAAK,KAAkBC,OAAQJ,IAAWJ,EAA5F,SACI,4BACKI,KAFwDA,W,iBC0BtEK,MAtCf,WAAmB,MAGUC,mBAAS,IAHnB,mBAGTvB,EAHS,KAGFwB,EAHE,OAIcD,oBAAS,GAJvB,mBAITtB,EAJS,KAIAwB,EAJA,OAKuBF,mBAAS,GALhC,mBAKRG,EALQ,KAKKC,EALL,OAMyBJ,mBAAS,IANlC,mBAMRZ,EANQ,aAOiBY,mBAAS,QAP1B,mBAORK,EAPQ,KA8Bf,OA9Be,KASfC,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACfL,GAAW,GACPM,EAFW,qEAEyDH,EAFzD,2CAEoGjB,EAFpG,iBAEyHe,EAFzH,4BAGGM,IAAMC,IAAIF,GAHb,OAGTG,EAHS,OAIfV,EAASU,EAAI/B,MACbsB,GAAW,GALI,2CAAH,qDAQhBU,KAED,CAACT,IAWF,gCACI,cAAC,EAAD,CAAO1B,MAAOA,EAAOC,QAASA,IAC9B,cAAC,EAAD,CAAOU,aAAcA,EAAcyB,WAAYpC,EAAMqC,OAAQxB,WAAYa,EAAaZ,SAV3E,SAACwB,GAAD,OAAgBX,EAAeW,UCjBrCC,MARf,WACI,OACI,cAACC,EAAA,EAAD,CAAWC,OAAK,EAAC7C,UAAU,sBAA3B,SACI,cAAC,EAAD,OCcG8C,MAVf,WACE,OACE,sBAAK9C,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCFS+C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.6a9c099c.chunk.js","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChartArea } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction Header(){\r\n    return (\r\n        <p className=\"header-title\">_CoinStats Interview Assessment <FontAwesomeIcon icon={faChartArea} /></p> \r\n    );\r\n}\r\n\r\nexport default Header;","import { faAutoprefixer } from '@fortawesome/free-brands-svg-icons';\r\nimport React from 'react';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\n\r\nfunction Posts({coins, loading}){\r\n\r\n    const columns = [{\r\n        dataField: 'market_cap_rank',\r\n        text: '#',\r\n        sort: true\r\n    }, {\r\n        dataField: 'name',\r\n        text: 'Coin',\r\n        sort: true\r\n    }, {\r\n        dataField: 'symbol',\r\n        text: '',\r\n        sort: false\r\n    }, {\r\n        dataField: 'current_price',\r\n        text: 'Price',\r\n        sort: true\r\n    }, {\r\n        dataField: 'total_volume',\r\n        text: '24h Volume',\r\n        sort: true\r\n    }, {\r\n        dataField: `dsada`,\r\n        text: 'Last 7 Days',\r\n        sort: false\r\n    }];\r\n\r\n    const defaultSorted = [{\r\n    dataField: 'market_cap_rank',\r\n    order: 'asc'\r\n    }];\r\n\r\n    if(loading){\r\n        return <h2>Loading coins...</h2>\r\n    }\r\n    \r\n    return (\r\n        <BootstrapTable\r\n            keyField=\"id\"\r\n            data={ coins }\r\n            columns={ columns }\r\n            defaultSorted={ defaultSorted } \r\n            />\r\n        // <BootstrapTable keyField='id' data={ coins } columns={ columns } bordered={ false } />\r\n        \r\n    // <div>\r\n    //     <table>\r\n    //         <tr>\r\n    //             <th>#</th>\r\n    //             <th>Coin</th>\r\n    //             <th> </th>\r\n    //             <th>Price</th>\r\n    //             <th>24h Volume</th>\r\n    //         </tr>\r\n    //         <tbody>\r\n    //         {coins.map(coin => (\r\n    //             <tr>\r\n    //                 <td>5</td>\r\n    //                 <td>{coin.name}</td>\r\n    //                 <td>{coin.symbol}</td>\r\n    //                 <td>{coin.current_price}</td>\r\n    //                 <td>{coin.total_volume}</td>\r\n    //             </tr>\r\n    //         ))}\r\n    //         </tbody>\r\n    //     </table>\r\n    // </div>\r\n\r\n    // <ul className=\"coins-list\">\r\n    //     {coins.map(coin => (\r\n    //         <li key={coin.id} className=\"coins-list-item\">\r\n    //             {coin.name}\r\n    //         </li>\r\n    //     ))}\r\n    // </ul>\r\n    );\r\n}\r\n\r\nexport default Posts;","import React from 'react';\r\nimport Pagination from 'react-bootstrap/Pagination';\r\nimport PageItem from 'react-bootstrap/PageItem'\r\n\r\nfunction Pages({ coinsPerPage, totalCoins, activePage, paginate }){\r\n    // Hard coded for 5 Pages of Coins\r\n    const pageNumbers = [1, 2, 3, 4, 5];\r\n\r\n    // Caculate how many pages required depending on the total number of coins\r\n    // for (let i = 1; i <= Math.ceil(totalCoins / coinsPerPage); i++){\r\n    //     pageNumbers.push(i);\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <Pagination>\r\n                {pageNumbers.map(number => (\r\n                    <Pagination.Item onClick={() => paginate(number)} href=\"!#\" key={number} active={number === activePage}>\r\n                        <a>\r\n                            {number}\r\n                        </a>\r\n                    </Pagination.Item>\r\n                ))}\r\n            </Pagination>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Pages;","import React, { useState, useEffect } from 'react';\r\nimport Coins from './Coins';\r\nimport Pages from './Pages';\r\nimport axios from 'axios';\r\n\r\nfunction MainList(){\r\n\r\n    // Hooks\r\n    const[coins, setCoins] = useState([]);\r\n    const[loading, setLoading] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [coinsPerPage, setCoinsPerPage] = useState(20);\r\n    const [currency, setCurrency] = useState(\"usd\");\r\n\r\n    useEffect(() => {\r\n        const fetchCoins = async () => {\r\n            setLoading(true);\r\n            let url = `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&order=market_cap_desc&per_page=${coinsPerPage}&page=${currentPage}&sparkline=true`;\r\n            const res = await axios.get(url);\r\n            setCoins(res.data);\r\n            setLoading(false);\r\n        }\r\n    \r\n        fetchCoins();\r\n\r\n    }, [currentPage]);\r\n\r\n    //Change Page\r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n    // Getting Current Coins\r\n    // const indexOfLastCoin = currentPage * coinsPerPage;\r\n    // const indexOfFirstCoin = indexOfLastCoin - coinsPerPage;\r\n    // const currentCoins = coins.slice(indexOfFirstCoin, indexOfLastCoin);\r\n\r\n    return(\r\n      <div>\r\n          <Coins coins={coins} loading={loading} />\r\n          <Pages coinsPerPage={coinsPerPage} totalPosts={coins.length} activePage={currentPage} paginate={paginate} />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default MainList;","import { Container } from 'react-bootstrap';\r\nimport MainList from './MainList';\r\n\r\nfunction Dashboard(){\r\n    return (\r\n        <Container fluid className=\"dashboard-container\">\r\n            <MainList />\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","//Find better way to handling imports through modules\n\nimport './css/App.css';\nimport './css/Header.css';\nimport './css/Dashboard.css';\nimport './css/Coins.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './components/Header';\nimport Dashboard from './components/Dashboard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Dashboard>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}