{"version":3,"sources":["components/Header.js","components/Coins.js","components/Pages.js","components/Currency.js","components/MainList.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","icon","faChartArea","Posts","coins","loading","unit","numberWithCommas","x","toString","replace","map","coin","market_cap_rank","src","image","name","symbol","current_price","total_volume","data","sparkline_in_7d","price","length","color","Pages","coinsPerPage","totalCoins","activePage","paginate","Pagination","number","Item","onClick","href","active","Currency","currentCurrency","chCurrency","currUnit","useState","currencies","setCurrencies","setLoading","useEffect","a","axios","get","res","rates","fetchCurrencies","currencyType","type","object","callback","key","value","onClickCurrency","toUpperCase","Object","keys","class","Button","MainList","setCoins","currentPage","setCurrentPage","currency","setCurrency","setUnit","url","fetchCoins","changedCurrency","changedUnit","totalPosts","pageNumber","Dashboard","Container","fluid","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b6f56ff.chunk.js","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChartArea } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction Header(){\r\n    return (\r\n        <p className=\"header-title\">_CoinStats Interview Assessment <FontAwesomeIcon icon={faChartArea} /></p> \r\n    );\r\n}\r\n\r\nexport default Header;","import { faAutoprefixer } from '@fortawesome/free-brands-svg-icons';\r\nimport { Sparklines, SparklinesLine } from 'react-sparklines';\r\nimport React from 'react';\r\n\r\nfunction Posts({coins, loading, unit}){\r\n\r\n    const numberWithCommas = (x) => {\r\n        if(x <= 1){\r\n            return x.toString();\r\n        }else{\r\n            return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        }\r\n        \r\n    }\r\n\r\n    if(loading){\r\n        return(\r\n            <div className=\"reactive-table\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"number\">#</th>\r\n                        <th className=\"coin-image\"></th>\r\n                        <th className=\"coin\">Coin</th>\r\n                        <th className=\"symbol\"> </th>\r\n                        <th className=\"price\">Price</th>\r\n                        <th className=\"Volume\">24h Volume</th>\r\n                        <th className=\"Sparkline\">Last 7 Days</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>#</td>\r\n                        <td></td>\r\n                        <td>Loading...</td>\r\n                        <td></td>\r\n                        <td>Loading...</td>\r\n                        <td>Loading...</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        );\r\n    }\r\n    \r\n    return (\r\n        \r\n    <div className=\"reactive-table\">\r\n        <table>\r\n            <tr>\r\n                <th className=\"favourite\"></th>\r\n                <th className=\"number\">#</th>\r\n                <th className=\"coin-image\"></th>\r\n                <th className=\"coin\">Coin</th>\r\n                <th className=\"symbol\"> </th>\r\n                <th className=\"price\">Price</th>\r\n                <th className=\"Volume\">24h Volume</th>\r\n                <th className=\"Sparkline\">Last 7 Days</th>\r\n            </tr>\r\n            <tbody>\r\n            {coins.map(coin => (\r\n                <tr>\r\n                    <td>fav</td>\r\n                    <td>{coin.market_cap_rank}</td>\r\n                    <td><img src={coin.image} className=\"coin-icon\"/></td>\r\n                    <td>{coin.name}</td>\r\n                    <td>{coin.symbol}</td>\r\n                    <td>{unit} {numberWithCommas(coin.current_price)}</td>\r\n                    <td>{unit} {numberWithCommas(coin.total_volume)}</td>\r\n                    <td>        \r\n                        <Sparklines data={coin.sparkline_in_7d.price}>\r\n                            { coin.sparkline_in_7d.price[coin.sparkline_in_7d.price.length - 1] < coin.sparkline_in_7d.price[coin.sparkline_in_7d.price.length - 2] ? (\r\n                                <SparklinesLine color=\"red\" />\r\n                            ):(\r\n                                <SparklinesLine color=\"green\" />\r\n                            ) }\r\n                            \r\n                        </Sparklines>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Posts;","import React from 'react';\r\nimport Pagination from 'react-bootstrap/Pagination';\r\nimport PageItem from 'react-bootstrap/PageItem'\r\n\r\nfunction Pages({ coinsPerPage, totalCoins, activePage, paginate }){\r\n    // Hard coded for 5 Pages of Coins\r\n    const pageNumbers = [1, 2, 3, 4, 5];\r\n\r\n    // Caculate how many pages required depending on the total number of coins\r\n    // for (let i = 1; i <= Math.ceil(totalCoins / coinsPerPage); i++){\r\n    //     pageNumbers.push(i);\r\n    // }\r\n\r\n    return (\r\n        <div className=\"pagination-bar\">\r\n            <Pagination>\r\n                {pageNumbers.map(number => (\r\n                    <Pagination.Item onClick={() => paginate(number)} href=\"!#\" key={number} active={number === activePage}>\r\n                        <a>\r\n                            {number}\r\n                        </a>\r\n                    </Pagination.Item>\r\n                ))}\r\n            </Pagination>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Pages;","import React, { useState, useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nfunction Currency({currentCurrency, chCurrency, currUnit}){\r\n\r\n    const[currencies, setCurrencies] = useState([]);\r\n    const[loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchCurrencies = async () => {\r\n            setLoading(true);\r\n            let url = `https://api.coingecko.com/api/v3/exchange_rates`;\r\n            const res = await axios.get(url);\r\n            setCurrencies(res.data.rates);\r\n            setLoading(false);\r\n        }\r\n    \r\n        fetchCurrencies();\r\n\r\n    }, []);\r\n\r\n    const onClickCurrency = (key, unit) => {\r\n        chCurrency(key);\r\n        currUnit(unit);\r\n    }\r\n\r\n    const currencyType = (type) => mapObject(currencies, function (key, value){\r\n        return (\r\n            <div>\r\n                {value.type == type && <li><a onClick={() => onClickCurrency(key, value.unit)} className=\"\" href=\"#!\">{key.toString().toUpperCase()} ({value.unit})</a></li>}\r\n            </div>\r\n        )\r\n    })\r\n\r\n    if(loading){\r\n        return (\r\n            <h2>loading currencies</h2>\r\n        )\r\n    }\r\n\r\n    return (\r\n            <div class=\"dropdown\">\r\n                <Button class=\"dropbtn\">{currentCurrency.toString().toUpperCase()}</Button>\r\n                <p>Crypto</p>\r\n                {currencyType(\"crypto\")}\r\n                <p>Fiat</p>\r\n                {currencyType(\"fiat\")}\r\n                <p>Commodity</p>\r\n                {currencyType(\"commodity\")}\r\n            </div>\r\n        );\r\n}\r\n\r\nfunction mapObject(object, callback) {\r\n    return Object.keys(object).map(function (key) {\r\n      return callback(key, object[key]);\r\n    });\r\n}\r\n\r\n\r\nexport default Currency;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Coins from './Coins';\r\nimport Pages from './Pages';\r\nimport Currency from './Currency';\r\nimport axios from 'axios';\r\n\r\nfunction MainList(){\r\n\r\n    // Hooks\r\n    const[coins, setCoins] = useState([]);\r\n    const[loading, setLoading] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [coinsPerPage, setCoinsPerPage] = useState(20);\r\n    const [currency, setCurrency] = useState(\"usd\");\r\n    const [unit, setUnit] = useState('$');\r\n\r\n    useEffect(() => {\r\n        const fetchCoins = async () => {\r\n            setLoading(true);\r\n            let url = `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&order=market_cap_desc&per_page=${coinsPerPage}&page=${currentPage}&sparkline=true`;\r\n            const res = await axios.get(url);\r\n            setCoins(res.data);\r\n            setLoading(false);\r\n        }\r\n    \r\n        fetchCoins();\r\n\r\n    }, [currentPage, currency]);\r\n\r\n    //Change Page\r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n    //Change Currency\r\n    const chCurrency = (changedCurrency) => setCurrency(changedCurrency);\r\n    const currUnit = (changedUnit) => setUnit(changedUnit); \r\n    \r\n    // Getting Current Coins\r\n    // const indexOfLastCoin = currentPage * coinsPerPage;\r\n    // const indexOfFirstCoin = indexOfLastCoin - coinsPerPage;\r\n    // const currentCoins = coins.slice(indexOfFirstCoin, indexOfLastCoin);\r\n\r\n    return(\r\n      <div>\r\n            <Currency currentCurrency={currency} chCurrency={chCurrency} currUnit={currUnit}></Currency>\r\n            <Coins coins={coins} loading={loading} unit={unit} />\r\n            <Pages coinsPerPage={coinsPerPage} totalPosts={coins.length} activePage={currentPage} paginate={paginate}/>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default MainList;","import { Container } from 'react-bootstrap';\r\nimport MainList from './MainList';\r\n\r\nfunction Dashboard(){\r\n    return (\r\n        <Container fluid className=\"dashboard\">\r\n            <MainList fluid/>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","//Find better way to handling imports through modules\n\nimport './css/App.css';\nimport './css/Header.css';\nimport './css/Dashboard.css';\nimport './css/Coins.css';\nimport './css/Pages.css';\nimport './css/Currency.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './components/Header';\nimport Dashboard from './components/Dashboard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Dashboard>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}