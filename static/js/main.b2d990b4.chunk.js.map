{"version":3,"sources":["components/Coins.js","components/Pages.js","components/Currency.js","components/MainList.js","components/Dashboard.js","components/Header.js","pages/index.jsx","pages/favourites.jsx","components/CoinBoard.js","pages/coinpage.jsx","App.js","reportWebVitals.js","index.js"],"names":["Coins","coins","loading","unit","isFavourite","currency","coinsPerPage","currentPage","useState","favourites","setFavourites","favCoins","setFavCoins","useEffect","fetchFavourites","a","JSON","parse","sessionStorage","getItem","length","listOfFavourites","join","axios","get","res","data","removeFromFavourites","coinName","tempFav","filter","setItem","stringify","addToFavourites","push","numberWithCommas","x","toString","replace","className","map","coin","includes","id","onClick","icon","faStar","market_cap_rank","alt","name","src","image","to","pathname","symbol","current_price","total_volume","sparkline_in_7d","price","color","state","coinId","toUpperCase","Pages","totalCoins","activePage","paginate","Pagination","number","Item","href","active","Currency","currentCurrency","chCurrency","currUnit","currencies","setCurrencies","setLoading","rates","fetchCurrencies","currencyType","type","object","callback","key","value","onClickCurrency","Object","keys","Button","variant","MainList","favPage","setIsFavPage","setCoins","setCurrentPage","setCurrency","setUnit","url","fetchCoins","window","location","changedCurrency","changedUnit","pageNumber","Dashboard","Container","fluid","Header","faChartArea","MainPage","Favourites","CoinBoard","setCoin","useLocation","console","log","fetchCoin","hashing_algoritm","large","CoinPage","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2d990b4.chunk.js","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { Sparklines, SparklinesLine } from 'react-sparklines';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nfunction Coins({coins, loading, unit, isFavourite, currency, coinsPerPage, currentPage}){\r\n\r\n    const [favourites, setFavourites] = useState([]);\r\n    const [favCoins, setFavCoins] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchFavourites = async () => {\r\n            let favourites = [];\r\n            favourites = JSON.parse(sessionStorage.getItem(\"favourites\"));\r\n            if(favourites.length > 0){\r\n                let listOfFavourites = favourites.join(\"%2C\");\r\n                    const res = await axios.get(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&ids=${listOfFavourites}&order=market_cap_desc&per_page=${coinsPerPage}&page=${currentPage}&sparkline=true`);\r\n                    setFavCoins(res.data);\r\n            }else{\r\n                setFavCoins([]);\r\n            }\r\n        }\r\n\r\n        //This is only used because it's using session variable, it is not neccessary if proper favourite handling\r\n        //is used\r\n        if(JSON.parse(sessionStorage.getItem(\"favourites\")) !== null){\r\n            fetchFavourites();\r\n        }\r\n\r\n    }, [favourites]);\r\n\r\n    const removeFromFavourites = (coinName) => {\r\n        let tempFav = []\r\n        tempFav = JSON.parse(sessionStorage.getItem(\"favourites\"));\r\n        tempFav = tempFav.filter(function(a){return a !== coinName})\r\n        setFavourites(tempFav);\r\n        sessionStorage.setItem(\"favourites\", JSON.stringify(tempFav));\r\n    }\r\n\r\n    const addToFavourites = (coinName) => {\r\n        let tempFav = []\r\n        if(JSON.parse(sessionStorage.getItem(\"favourites\"))){\r\n            tempFav = JSON.parse(sessionStorage.getItem(\"favourites\"));\r\n        }\r\n        tempFav.push(coinName);\r\n        setFavourites(tempFav);\r\n        sessionStorage.setItem(\"favourites\", JSON.stringify(tempFav));\r\n    }\r\n\r\n    const numberWithCommas = (x) => {\r\n        if(x <= 1){\r\n            return x.toString();\r\n        }else{\r\n            return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        }\r\n        \r\n    }\r\n\r\n    if(loading){\r\n        return(\r\n            <div className=\"reactive-table\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"favourite\"></th>\r\n                        <th className=\"number\">#</th>\r\n                        <th className=\"coin-image\"></th>\r\n                        <th className=\"coin\">Coin</th>\r\n                        <th className=\"symbol\"> </th>\r\n                        <th className=\"price\">Price</th>\r\n                        <th className=\"Volume\">24h Volume</th>\r\n                        <th className=\"Sparkline\">Last 7 Days</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td></td>\r\n                        <td>#</td>\r\n                        <td></td>\r\n                        <td>Loading...</td>\r\n                        <td></td>\r\n                        <td>Loading...</td>\r\n                        <td>Loading...</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        );\r\n    }\r\n    \r\n    return (\r\n        \r\n    <div className=\"reactive-table\">\r\n        <table>\r\n            <tr>\r\n                <th className=\"favourite\"></th>\r\n                <th className=\"number\">#</th>\r\n                <th className=\"coin-image\"></th>\r\n                <th className=\"coin\">Coin</th>\r\n                <th className=\"symbol\"> </th>\r\n                <th className=\"price\">Price</th>\r\n                <th className=\"Volume\">24h Volume</th>\r\n                <th className=\"Sparkline\">Last 7 Days</th>\r\n            </tr>\r\n            <tbody>\r\n\r\n            {/* This Section Can be put into a proper function to reduce and clean code as alot of the lines repeat*/}\r\n\r\n            {isFavourite ? (\r\n                favCoins.length === 0 ? (\r\n                    <tr>\r\n                        <td></td>\r\n                        <td>#</td>\r\n                        <td></td>\r\n                        <td>No Favourites</td>\r\n                    </tr>\r\n                ) : (\r\n                    favCoins.map(coin => (\r\n                        <tr>\r\n                            {(JSON.parse(sessionStorage.getItem(\"favourites\"))).includes(coin.id) ? (\r\n                                <td><a className=\"favStarSelected\" onClick={() => removeFromFavourites(coin.id)}><FontAwesomeIcon icon={faStar}/></a></td>\r\n                            ) : (\r\n                                <td><a className=\"favStar\" onClick={() => addToFavourites(coin.id)}><FontAwesomeIcon icon={faStar}/></a></td>\r\n                            )}\r\n                            <td>{coin.market_cap_rank}</td>\r\n                            <td><img alt={coin.name} src={coin.image} className=\"coin-icon\"/></td>\r\n                            <td><Link to={{pathname: `/crypto-dashboard/${coin.name}`}}>{coin.name}</Link></td>\r\n                            <td>{coin.symbol}</td>\r\n                            <td>{unit} {numberWithCommas(coin.current_price)}</td>\r\n                            <td>{unit} {numberWithCommas(coin.total_volume)}</td>\r\n                            <td>        \r\n                                <Sparklines data={coin.sparkline_in_7d.price}>\r\n                                    { coin.sparkline_in_7d.price[coin.sparkline_in_7d.price.length - 1] < coin.sparkline_in_7d.price[coin.sparkline_in_7d.price.length - 2] ? (\r\n                                        <SparklinesLine color=\"red\" />\r\n                                    ):(\r\n                                        <SparklinesLine color=\"green\" />\r\n                                    ) }\r\n                                </Sparklines>\r\n                            </td>\r\n                        </tr>\r\n                    ))\r\n                ) \r\n            ) : (\r\n                coins.map(coin => (\r\n                    <tr>\r\n                        {JSON.parse(sessionStorage.getItem(\"favourites\")) && (JSON.parse(sessionStorage.getItem(\"favourites\"))).includes(coin.id) ? (\r\n                            <td><a className=\"favStarSelected\" onClick={() => removeFromFavourites(coin.id)}><FontAwesomeIcon icon={faStar}/></a></td>\r\n                        ) : (\r\n                            <td><a className=\"favStar\" onClick={() => addToFavourites(coin.id)}><FontAwesomeIcon icon={faStar}/></a></td>\r\n                        )}\r\n                        \r\n                        <td>{coin.market_cap_rank}</td>\r\n                        <td><img alt={coin.name} src={coin.image} className=\"coin-icon\"/></td>\r\n                        <td><Link to={{pathname: `/crypto-dashboard/${coin.name}`, state: { coinId: coin.id}}}>{coin.name}</Link></td>\r\n                        <td>{coin.symbol.toString().toUpperCase()}</td>\r\n                        <td>{unit} {numberWithCommas(coin.current_price)}</td>\r\n                        <td>{unit} {numberWithCommas(coin.total_volume)}</td>\r\n                        <td>        \r\n                            <Sparklines data={coin.sparkline_in_7d.price}>\r\n                                { coin.sparkline_in_7d.price[coin.sparkline_in_7d.price.length - 1] < coin.sparkline_in_7d.price[coin.sparkline_in_7d.price.length - 2] ? (\r\n                                    <SparklinesLine color=\"red\" />\r\n                                ):(\r\n                                    <SparklinesLine color=\"green\" />\r\n                                ) }\r\n                            </Sparklines>\r\n                        </td>\r\n                    </tr>\r\n                ))\r\n            )}\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default Coins;","import React from 'react';\r\nimport Pagination from 'react-bootstrap/Pagination';\r\nimport PageItem from 'react-bootstrap/PageItem'\r\n\r\nfunction Pages({ coinsPerPage, totalCoins, activePage, paginate }){\r\n    // Hard coded for 5 Pages of Coins (This will affect the favourites page as there is no calculation being done for the total number of coins)\r\n    const pageNumbers = [1, 2, 3, 4, 5];\r\n\r\n    // Caculate how many pages required depending on the total number of coins\r\n    // for (let i = 1; i <= Math.ceil(totalCoins / coinsPerPage); i++){\r\n    //     pageNumbers.push(i);\r\n    // }\r\n\r\n    return (\r\n        <div className=\"pagination-bar-row\">\r\n            <Pagination>\r\n                {pageNumbers.map(number => (\r\n                    <Pagination.Item onClick={() => paginate(number)} href=\"\" key={number} active={number === activePage}>\r\n                        <a>\r\n                            {number}\r\n                        </a>\r\n                    </Pagination.Item>\r\n                ))}\r\n            </Pagination>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Pages;","import React, { useState, useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nfunction Currency({currentCurrency, chCurrency, currUnit}){\r\n\r\n    const[currencies, setCurrencies] = useState([]);\r\n    const[loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchCurrencies = async () => {\r\n            setLoading(true);\r\n            let url = `https://api.coingecko.com/api/v3/exchange_rates`;\r\n            const res = await axios.get(url);\r\n            setCurrencies(res.data.rates);\r\n            setLoading(false);\r\n        }\r\n    \r\n        fetchCurrencies();\r\n\r\n    }, []);\r\n\r\n    const onClickCurrency = (key, unit) => {\r\n        chCurrency(key);\r\n        currUnit(unit);\r\n    }\r\n\r\n    const currencyType = (type) => mapObject(currencies, function (key, value){\r\n        if(value.type === type){\r\n            return(\r\n                <li key={key.toString()}><a onClick={() => onClickCurrency(key, value.unit)} className=\"currency-items\" href=\"#\">{key.toString().toUpperCase()} ({value.unit})</a></li>\r\n            );\r\n        }\r\n    })\r\n\r\n    if(loading){\r\n        return (\r\n            <div className=\"dropdown\">\r\n                <Button variant=\"success\" className=\"dropbtn\">{currentCurrency.toString().toUpperCase()}</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n            <div className=\"dropdown\">\r\n                <Button variant=\"success\" className=\"dropbtn\">{currentCurrency.toString().toUpperCase()}</Button>\r\n                <div className=\"dropdown-content\">\r\n                    <ul>Crypto</ul>\r\n                    {currencyType(\"crypto\")}\r\n                    <ul>Fiat</ul>\r\n                    {currencyType(\"fiat\")}\r\n                    <ul>Commodity</ul>\r\n                    {currencyType(\"commodity\")}\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nfunction mapObject(object, callback) {\r\n    return Object.keys(object).map(function (key) {\r\n      return callback(key, object[key]);\r\n    });\r\n}\r\n\r\n\r\nexport default Currency;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport Coins from './Coins';\r\nimport Pages from './Pages';\r\nimport Currency from './Currency';\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction MainList(){\r\n\r\n\r\n    // Hooks\r\n    const[favPage, setIsFavPage] = useState(false);\r\n    const[coins, setCoins] = useState([]);\r\n    // const[favourites, setFavourites] = useState([]);\r\n    const[loading, setLoading] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [coinsPerPage, setCoinsPerPage] = useState(20);\r\n    const [currency, setCurrency] = useState(\"usd\");\r\n    const [unit, setUnit] = useState('$');\r\n\r\n    useEffect(() => {\r\n        const getPage = () => {\r\n            //Proper path handling can be done with routing and passing down through components by accessing the props\r\n            if(window.location.pathname === \"/crypto-dashboard/favourites\"){\r\n                setIsFavPage(true);\r\n            } \r\n        }\r\n\r\n        const fetchCoins = async () => {\r\n            setLoading(true);\r\n            let url = `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&order=market_cap_desc&per_page=${coinsPerPage}&page=${currentPage}&sparkline=true`;\r\n            const res = await axios.get(url);\r\n            setCoins(res.data);\r\n            setLoading(false);\r\n        }\r\n\r\n        fetchCoins();\r\n        getPage();\r\n\r\n    }, [currentPage, currency]);\r\n\r\n    // useEffect(() => {\r\n    //     const fetchFavourites = async () => {\r\n    //         let favourites = []\r\n    //         favourites = JSON.parse(sessionStorage.getItem(\"favourites\"));\r\n    //         if(favourites){\r\n    //             let listOfFavourites = favourites.join(\"%2C\");\r\n                \r\n    //                 const res = await axios.get(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&ids=${listOfFavourites}&order=market_cap_desc&per_page=${coinsPerPage}&page=${currentPage}&sparkline=true`);\r\n            \r\n    //         }\r\n    //     }\r\n\r\n    //     fetchFavourites();\r\n\r\n    // }, [sessionStorage.getItem(\"favourites\")]);\r\n\r\n    //Change Page\r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n    //Change Currency\r\n    const chCurrency = (changedCurrency) => setCurrency(changedCurrency);\r\n    const currUnit = (changedUnit) => setUnit(changedUnit); \r\n    \r\n    // Getting Current Coins\r\n    // const indexOfLastCoin = currentPage * coinsPerPage;\r\n    // const indexOfFirstCoin = indexOfLastCoin - coinsPerPage;\r\n    // const currentCoins = coins.slice(indexOfFirstCoin, indexOfLastCoin);\r\n    \r\n    return(\r\n      <div>\r\n            <nav className=\"menu-bar\">\r\n                <div className=\"menu-item\"><Currency currentCurrency={currency} chCurrency={chCurrency} currUnit={currUnit}></Currency></div> \r\n                {favPage ? (\r\n                    <div className=\"menu-item\"><Link to=\"/crypto-dashboard/\"><Button variant=\"danger\">Back To Home</Button></Link></div>\r\n                ) : (\r\n                    <div className=\"menu-item\"><Link to=\"/crypto-dashboard/favourites\"><Button variant=\"warning\">Favourites</Button></Link></div>\r\n                )}\r\n            </nav>\r\n            <Coins coins={coins} loading={loading} unit={unit} isFavourite={favPage} currency={currency} coinsPerPage={coinsPerPage} currentPage={currentPage}/>\r\n            <Pages coinsPerPage={coinsPerPage} totalCoins={coins.length} activePage={currentPage} paginate={paginate}/>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default MainList;","import { Container } from 'react-bootstrap';\r\nimport MainList from './MainList';\r\n\r\nfunction Dashboard(){\r\n    return (\r\n        <Container fluid className=\"dashboard\">\r\n            <MainList fluid/>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChartArea } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction Header(){\r\n    return (\r\n        <p className=\"header-title\">_Crypto DashBoard <FontAwesomeIcon icon={faChartArea} /> <a className=\"title\" href=\"https://github.com/JAhimaz/crypto-dashboard\"> GitHub | Joshua Ahimaz</a>\r\n        \r\n        </p> \r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nimport '../css/App.css';\r\nimport '../css/Header.css';\r\nimport '../css/Dashboard.css';\r\nimport '../css/Coins.css';\r\nimport '../css/Pages.css';\r\nimport '../css/Currency.css';\r\nimport '../css/MainList.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Dashboard from '../components/Dashboard';\r\nimport Header from '../components/Header';\r\n\r\n\r\nfunction MainPage() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Dashboard>\r\n      </Dashboard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage","import React from \"react\";\r\n\r\nimport '../css/App.css';\r\nimport '../css/Header.css';\r\nimport '../css/Dashboard.css';\r\nimport '../css/Coins.css';\r\nimport '../css/Pages.css';\r\nimport '../css/Currency.css';\r\nimport '../css/MainList.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Dashboard from '../components/Dashboard';\r\nimport Header from '../components/Header';\r\n\r\n\r\nfunction Favourites() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Dashboard>\r\n      </Dashboard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Favourites","import { Sparklines, SparklinesLine } from 'react-sparklines';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation, Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\n\r\nfunction CoinBoard(){\r\n\r\n    const [coin, setCoin] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    let data = useLocation();\r\n    let coinId = data.state.coinId;\r\n\r\n    useEffect(() => {\r\n        const fetchCoin = async () => {\r\n            if(typeof coinId === 'undefined'){\r\n                console.log(\"NULL COINNAME\");\r\n            }else{\r\n                console.log(coinId);\r\n                let url = `https://api.coingecko.com/api/v3/coins/${coinId}?market_data=true&sparkline=true`;\r\n                const res = await axios.get(url);\r\n                setCoin(res.data);\r\n                setLoading(false);\r\n            }\r\n        }\r\n\r\n        fetchCoin();\r\n\r\n    }, []);\r\n\r\n    if(loading){\r\n        return (\r\n            <h2>Loading Data</h2>\r\n        )\r\n    }else{\r\n        return (\r\n            <div>\r\n                <h2>{coin.name} {coin.id} {coin.hashing_algoritm} {coin.symbol} {coin.market_cap_rank}</h2>\r\n                <img src={coin.image.large} alt={coin.name} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CoinBoard;","import React from \"react\";\r\n\r\nimport '../css/App.css';\r\nimport '../css/Header.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Header from '../components/Header';\r\nimport CoinBoard from '../components/CoinBoard';\r\n\r\n\r\nfunction CoinPage() {\r\n    return (\r\n    <div className=\"App\">\r\n        <Header />\r\n        <CoinBoard />\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default CoinPage;","//Find better way to handling imports through modules\nimport React from \"react\";\n\n\n// import './css/App.css';\n// import './css/Header.css';\n// import './css/Dashboard.css';\n// import './css/Coins.css';\n// import './css/Pages.css';\n// import './css/Currency.css';\n// import './css/MainList.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import Header from './components/Header';\n// import Dashboard from './components/Dashboard';\n\n//Routing\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\n\n//Pages\nimport MainPage from \"./pages/index\";\nimport Favourites from \"./pages/favourites\";\nimport CoinPage from \"./pages/coinpage\";\n\nfunction App() {\n    return( \n    <Router>\n      <Switch>\n        <Route exact path=\"/crypto-dashboard/favourites\" component={Favourites} />\n        <Route exact path=\"/crypto-dashboard/:coin\" name=\"coin\" component={CoinPage} />\n        <Route path=\"/crypto-dashboard/\" component={MainPage} />\n        <Redirect to=\"/crypto-dashboard/\" />\n        {/* REDIRECT TO 404 */}\n      </Switch>\n     \n    </Router>\n    );\n}\n\nexport default App;\n\n// function App(){\n//   return (\n//     <div className=\"App\">\n//       <Header />\n//       <Dashboard>\n//       </Dashboard>\n//     </div>\n//   );\n// }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}